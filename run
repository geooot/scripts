#!/bin/bash
RED='\033[0;31m'
GREEN='\033[0;32m'
WHITE='\033[0;37m'
NC='\033[0m'

FILE=""
USEFILE=true
IN_FILE="in.txt"
OUT_FILE=""
SIMPLE=false
JUST_RUN=false

# Detect the platform (similar to $OSTYPE)
DATE_COMMAND="date"
  
if [[ "$OSTYPE" == "darwin"* ]]; then
	DATE_COMMAND="gdate"
fi

while getopts f:i:o:shur option
do
	case "$option" in
		f)
			FILE="$OPTARG" ;;
		i)
			IN_FILE="$OPTARG" ;;
		o)
			OUT_FILE="$OPTARG" ;;
		u)
			USEFILE=false ;;
		r)
			JUST_RUN=true ;;
		s)
			SIMPLE=true ;;
		\? | h)
			echo -e "\\nUsage: run -f [FILENAME] [options]"
			echo -e "\\t-i\\tSpecify the input file to use"
			echo -e "\\t-o\\tSpecify an expected output file to diff stdout with"
			echo -e "\\t-u\\tUse stdin instead of '$IN_FILE' as input"
			echo -e "\\t-s\\tDo a simple compile and execute"
			echo -e "\\t-r\\tSkip compilation and just run the class"
			echo -e "\\t-h\\tShow usage\\n"
	esac
done

if [[ "$FILE" == "" ]]; then
	echo -e "${RED}Error: no source file specified"
fi

if [[ "$FILE" == "" ]]; then
	echo -e "${RED}Error: no input file specified"
fi

EXTENSION="${FILE##*.}"
NAME="${FILE%.*}"

RunJava()
{
	if [[ "$JUST_RUN" != true ]]; then
		echo -e "${GREEN}Compiling...${WHITE}"
		javac "$FILE"
	fi

	echo -e "${GREEN}Running...${WHITE}"

	if [[ "$SIMPLE" == true ]]; then
		java "$NAME"
		exit
	fi

	START_TIME=0
	OUTPUT=""
	if [[ "$USEFILE" == true ]]; then
		START_TIME=$(($($DATE_COMMAND +%s%N)/1000000))
		OUTPUT=$(java "$NAME" < "$IN_FILE")
	else
		START_TIME=$(($($DATE_COMMAND +%s%N)/1000000))
		OUTPUT=$(java "$NAME")
	fi
	echo -e "$OUTPUT"
	END_TIME=$(($($DATE_COMMAND +%s%N)/1000000))
	ELAPSED_TIME=$(($END_TIME - $START_TIME))
	echo -e "${GREEN}Runtime: ${ELAPSED_TIME} ms"
	if [[ "$OUT_FILE" != "" ]]; then
		echo -e "${GREEN}Checking difference with output file${WHITE}"
		echo "$OUTPUT" | diff - "$OUT_FILE"
	fi
	echo -e "${GREEN}Removing class file..."
	rm *.class
}

RunPython()
{
	if [[ "$SIMPLE" == true ]]; then
		python "$FILE"
		exit
	fi

	START_TIME=0
	if [[ "$USEFILE" == true ]]; then
		START_TIME=$(($(date +%s%N)/1000000))
		python "$FILE" < in.txt
	else
		START_TIME=$(($(date +%s%N)/1000000))
		python "$FILE"
	fi
	END_TIME=$(($(date +%s%N)/1000000))

	ELAPSED_TIME=$(($END_TIME - $START_TIME))

	echo -e "${GREEN}Runtime: ${ELAPSED_TIME} ms"

	echo -e "${GREEN}Done"
}

RunCpp()
{
	echo -e "${GREEN}Compiling...${WHITE}"
	g++ -std=c++11 "$FILE" -Wall

	echo -e "${GREEN}Running...${WHITE}"

	if [[ "$SIMPLE" == true ]]; then
		./a.out
		exit
	fi

	START_TIME=0
	if [[ "$USEFILE" == true ]]; then
		START_TIME=$(($(date +%s%N)/1000000))
		./a.out < in.txt
	else
		START_TIME=$(($(date +%s%N)/1000000))
		./a.out
	fi
	END_TIME=$(($(date +%s%N)/1000000))

	ELAPSED_TIME=$(($END_TIME - $START_TIME))

	echo -e "${GREEN}Runtime: ${ELAPSED_TIME} ms"

	echo -e "${GREEN}Removing executable file..."
	rm a.out
	echo -e "${GREEN}Done"
}

if [[ "$EXTENSION" == "java" ]]; then
	RunJava
elif [[ "$EXTENSION" == "py" ]]; then
	RunPython
elif [[ "$EXTENSION" == "cpp" ]]; then
	RunCpp
else
	echo -e "${NC}Filetype '$EXTENSION' is not supported"
fi
